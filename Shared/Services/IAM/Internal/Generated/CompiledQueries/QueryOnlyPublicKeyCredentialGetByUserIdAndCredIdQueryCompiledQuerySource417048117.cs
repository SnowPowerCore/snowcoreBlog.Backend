// <auto-generated/>
#pragma warning disable
using Marten.Linq;
using Marten.Linq.QueryHandlers;
using System;
using snowcoreBlog.Backend.IAM.CompiledQueries.Marten;

namespace Marten.Generated.CompiledQueries
{
    // START: QueryOnlyPublicKeyCredentialGetByUserIdAndCredIdQueryCompiledQuery417048117
    public class QueryOnlyPublicKeyCredentialGetByUserIdAndCredIdQueryCompiledQuery417048117 : Marten.Internal.CompiledQueries.ClonedCompiledQuery<snowcoreBlog.Backend.IAM.Core.Entities.Fido2PublicKeyCredentialEntity, snowcoreBlog.Backend.IAM.CompiledQueries.Marten.PublicKeyCredentialGetByUserIdAndCredIdQuery>
    {
        private readonly Marten.Linq.QueryHandlers.IMaybeStatefulHandler _inner;
        private readonly snowcoreBlog.Backend.IAM.CompiledQueries.Marten.PublicKeyCredentialGetByUserIdAndCredIdQuery _query;
        private readonly Marten.Linq.QueryStatistics _statistics;

        public QueryOnlyPublicKeyCredentialGetByUserIdAndCredIdQueryCompiledQuery417048117(Marten.Linq.QueryHandlers.IMaybeStatefulHandler inner, snowcoreBlog.Backend.IAM.CompiledQueries.Marten.PublicKeyCredentialGetByUserIdAndCredIdQuery query, Marten.Linq.QueryStatistics statistics) : base(inner, query, statistics)
        {
            _inner = inner;
            _query = query;
            _statistics = statistics;
        }



        public override void ConfigureCommand(Weasel.Postgresql.ICommandBuilder builder, Marten.Internal.IMartenSession session)
        {
            var parameters1 = builder.AppendWithParameters(@"select d.data from public.mt_doc_fido2publickeycredentialentity as d where (d.mt_deleted = False and CAST(d.data ->> 'UserId' as uuid) = ^ and d.data ->> 'PublicKeyCredentialId' = ^) LIMIT ^;", '^');

            parameters1[0].NpgsqlDbType = NpgsqlTypes.NpgsqlDbType.Uuid;
            parameters1[0].Value = _query.UserId;

            parameters1[1].NpgsqlDbType = NpgsqlTypes.NpgsqlDbType.Text;
            parameters1[1].Value = _query.PublicKeyCredentialId;
            parameters1[2].Value = 2;
            parameters1[2].NpgsqlDbType = NpgsqlTypes.NpgsqlDbType.Integer;
        }

    }

    // END: QueryOnlyPublicKeyCredentialGetByUserIdAndCredIdQueryCompiledQuery417048117
    
    
    // START: QueryOnlyPublicKeyCredentialGetByUserIdAndCredIdQueryCompiledQuerySource417048117
    public class QueryOnlyPublicKeyCredentialGetByUserIdAndCredIdQueryCompiledQuerySource417048117 : Marten.Internal.CompiledQueries.CompiledQuerySource<snowcoreBlog.Backend.IAM.Core.Entities.Fido2PublicKeyCredentialEntity, snowcoreBlog.Backend.IAM.CompiledQueries.Marten.PublicKeyCredentialGetByUserIdAndCredIdQuery>
    {
        private readonly Marten.Linq.QueryHandlers.IMaybeStatefulHandler _maybeStatefulHandler;

        public QueryOnlyPublicKeyCredentialGetByUserIdAndCredIdQueryCompiledQuerySource417048117(Marten.Linq.QueryHandlers.IMaybeStatefulHandler maybeStatefulHandler)
        {
            _maybeStatefulHandler = maybeStatefulHandler;
        }



        public override Marten.Linq.QueryHandlers.IQueryHandler<snowcoreBlog.Backend.IAM.Core.Entities.Fido2PublicKeyCredentialEntity> BuildHandler(snowcoreBlog.Backend.IAM.CompiledQueries.Marten.PublicKeyCredentialGetByUserIdAndCredIdQuery query, Marten.Internal.IMartenSession session)
        {
            return new Marten.Generated.CompiledQueries.QueryOnlyPublicKeyCredentialGetByUserIdAndCredIdQueryCompiledQuery417048117(_maybeStatefulHandler, query, null);
        }

    }

    // END: QueryOnlyPublicKeyCredentialGetByUserIdAndCredIdQueryCompiledQuerySource417048117
    
    
}

